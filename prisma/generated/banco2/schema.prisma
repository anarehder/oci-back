generator client {
  provider = "prisma-client-js"
  output   = "../generated/banco2"
}

datasource db2 {
  provider = "mysql"
  url      = env("DATABASE_URL_2")
}

model ComputeInstances {
  tenancy_name          String?   @db2.VarChar(50)
  tenancy_id            String?   @db2.VarChar(255)
  id                    String    @id @default(dbgenerated("()")) @db2.VarChar(150)
  display_name          String?   @db2.VarChar(50)
  compartment_id        String?   @db2.VarChar(150)
  availability_domain   String?   @db2.VarChar(50)
  fault_domain          String?   @db2.VarChar(50)
  region                String?   @db2.VarChar(30)
  lifecycle_state       String?   @db2.VarChar(20)
  shape                 String?   @db2.VarChar(30)
  memory_in_gbs         Float?
  ocpus                 Int?
  processor_description String?   @db2.VarChar(50)
  time_created          DateTime? @db2.DateTime(0)
  CreatedBy             String?   @db2.VarChar(200)
  monthly_cost          Float?
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model CpuUtilization {
  profile_name        String?   @db2.VarChar(30)
  compartment_id      String?   @db2.VarChar(150)
  region              String?   @db2.VarChar(50)
  resourceDisplayName String?   @db2.VarChar(50)
  resourceId          String?   @db2.VarChar(150)
  metric_timestamp    DateTime? @db2.DateTime(0)
  cpu_usage           Float?

  @@ignore
}

model SubscriptionDetails {
  tenancy_name        String?   @db2.VarChar(50)
  tenancy_id          String    @default(dbgenerated("()")) @db2.VarChar(150)
  home_region         String?   @db2.VarChar(20)
  subscription_id     String    @default(dbgenerated("()")) @db2.VarChar(20)
  service_name        String?   @db2.VarChar(30)
  currency            String?   @db2.VarChar(10)
  time_start          DateTime  @default(dbgenerated("(0000-00-00 00:00:00)")) @db2.DateTime(0)
  time_end            DateTime? @db2.DateTime(0)
  admin_email         String?   @db2.VarChar(50)
  buyer_email         String?   @db2.VarChar(50)
  end_user_customer   String?   @db2.VarChar(100)
  payment_method      String?   @db2.VarChar(50)
  pricing_model       String?   @db2.VarChar(50)
  product             String?   @db2.VarChar(50)
  is_having_usage     String?   @db2.VarChar(10)
  total_value         Float?
  used_amount         Float?
  line_net_amount     Float?
  available_amount    Float?
  total_dias_contrato Int?
  dias_decorridos     Int?

  @@id([tenancy_id, subscription_id, time_start])
}

model TenancyDetails {
  tenancy_name    String?   @db2.VarChar(50)
  tenancy_id      String    @id @db2.VarChar(150)
  home_region     String?   @db2.VarChar(20)
  subscription_id String?   @db2.VarChar(20)
  service_name    String?   @db2.VarChar(30)
  currency        String?   @db2.VarChar(10)
  time_start      DateTime? @db2.DateTime(0)
  time_end        DateTime? @db2.DateTime(0)
  tenancy_status  String?   @db2.VarChar(10)
  total_credit    Float?
}

model tenancy_details {
  tenancy_id   String   @id @db2.VarChar(255)
  tenancy_name String?  @db2.VarChar(255)
  home_region  String?  @db2.VarChar(100)
  service_name String?  @db2.VarChar(255)
  currency     String?  @db2.VarChar(10)
  time_start   DateTime @db2.DateTime(0)
  time_end     DateTime @db2.DateTime(0)
  status       String?  @db2.VarChar(50)
  total_value  Decimal? @db2.Decimal(15, 2)
}

model CustoDiarioTotal {
  tenancy_name String?   @db2.VarChar(50)
  tenant_id    String    @default(dbgenerated("()")) @db2.VarChar(255)
  cost_dia     Float?
  currency     String?   @db2.VarChar(20)
  usage_dia    Float?
  time_started DateTime  @default(dbgenerated("(0000-00-00 00:00:00)")) @db2.DateTime(0)
  time_ended   DateTime? @db2.DateTime(0)

  @@id([tenant_id, time_started])
}

model CustoMensalTotal {
  tenancy_name String?   @db2.VarChar(50)
  tenant_id    String    @default(dbgenerated("()")) @db2.VarChar(255)
  cost_mes     Float?
  currency     String?   @db2.VarChar(20)
  usage_mes    Float?
  time_started DateTime  @default(dbgenerated("(0000-00-00 00:00:00)")) @db2.DateTime(0)
  time_ended   DateTime? @db2.DateTime(0)

  @@id([tenant_id, time_started])
}

model computeEvents {
  id                   Int       @id @default(0)
  eventType            String?   @db2.VarChar(255)
  eventTime            DateTime? @db2.DateTime(0)
  source               String?   @db2.VarChar(100)
  opcRequestId         String?   @unique(map: "opcRequestId")
  rawEvent             String?   @db2.LongText
  compartmentId        String?   @db2.VarChar(255)
  compartmentName      String?   @db2.VarChar(255)
  eventName            String?   @db2.VarChar(255)
  message              String?   @db2.Text
  action               String?   @db2.VarChar(100)
  principalName        String?   @db2.VarChar(255)
  ipAddress            String?   @db2.VarChar(255)
  displayName          String?   @db2.VarChar(255)
  lifecycleState       String?   @db2.VarChar(50)
  shape                String?   @db2.VarChar(100)
  ocpus                Float?    @db2.Float
  memoryInGbs          Float?    @db2.Float
  processorDescription String?   @db2.VarChar(255)
  createdBy            String?   @db2.VarChar(100)
  createdOn            DateTime? @db2.DateTime(0)
  preserveBootVolume   Boolean?
  createdAt            DateTime  @default(now()) @db2.Timestamp(0)
  instanceActionType   String?   @db2.VarChar(50)
  tenancyName          String?   @db2.VarChar(255)
  isCheck              Boolean?
  ticket               String?   @db2.VarChar(50)
}

model identityEvents {
  id                     Int       @id @default(0)
  eventType              String?   @db2.VarChar(255)
  eventTime              DateTime? @db2.DateTime(0)
  source                 String?   @db2.VarChar(100)
  opcRequestId           String?   @unique(map: "opcRequestId")
  rawEvent               String?   @db2.LongText
  adminResourceName      String?   @db2.VarChar(255)
  adminResourceType      String?   @db2.VarChar(100)
  compartmentName        String?   @db2.VarChar(255)
  principalName          String?   @db2.VarChar(255)
  action                 String?   @db2.VarChar(100)
  message                String?   @db2.Text
  idcsLastModifiedByName String?   @db2.VarChar(255)
  idcsLastModifiedByType String?   @db2.VarChar(100)
  policyName             String?   @db2.VarChar(255)
  statements             String?   @db2.Text
  createdAt              DateTime  @default(now()) @db2.Timestamp(0)
  eventName              String?   @db2.VarChar(50)
  tenancyName            String?   @db2.VarChar(255)
  isCheck                Boolean?
  ticket                 String?   @db2.VarChar(50)
}

model networkEvents {
  id              Int       @id @default(0)
  eventType       String?   @db2.VarChar(255)
  eventTime       DateTime? @db2.DateTime(0)
  source          String?   @db2.VarChar(100)
  opcRequestId    String?   @unique(map: "opcRequestId")
  rawEvent        String?   @db2.LongText
  compartmentId   String?   @db2.VarChar(255)
  compartmentName String?   @db2.VarChar(255)
  eventName       String?   @db2.VarChar(255)
  message         String?   @db2.Text
  action          String?   @db2.VarChar(100)
  principalName   String?   @db2.VarChar(255)
  ipAddress       String?   @db2.VarChar(100)
  routeRules      String?   @db2.VarChar(255)
  createdBy       String?   @db2.VarChar(100)
  createdOn       DateTime? @db2.DateTime(0)
  createdAt       DateTime  @default(now()) @db2.Timestamp(0)
  tenancyName     String?   @db2.VarChar(255)
  isCheck         Boolean?
  ticket          String?   @db2.VarChar(50)
}

model BlockVolume {
  tenancy_name        String?   @db2.VarChar(100)
  tenancy_id          String    @default(dbgenerated("()")) @db2.VarChar(200)
  availability_domain String?   @db2.VarChar(100)
  compartment_id      String?   @db2.VarChar(200)
  display_name        String?   @db2.VarChar(60)
  id                  String    @default(dbgenerated("()")) @db2.VarChar(200)
  lifecycle_state     String?   @db2.VarChar(50)
  size_in_gbs         Float?
  time_created        DateTime? @db2.DateTime(0)
  vpus_per_gb         Int?
  is_boot_volume      String?   @db2.Char(1)
  is_orfao            String?   @db2.Char(1)
  custo_mes           Float?

  @@id([tenancy_id, id])
}

model CustoPorService {
  tenancy_name String?   @db2.VarChar(50)
  tenant_id    String    @default(dbgenerated("()")) @db2.VarChar(255)
  service      String    @default(dbgenerated("()")) @db2.VarChar(105)
  cost_mes     Float?
  currency     String?   @db2.VarChar(20)
  usage_mes    Float?
  time_started DateTime  @default(dbgenerated("(0000-00-00 00:00:00)")) @db2.DateTime(0)
  time_ended   DateTime? @db2.DateTime(0)

  @@id([tenant_id, time_started, service])
}

model CustoPorSkuName {
  tenancy_name String?   @db2.VarChar(50)
  tenant_id    String    @default(dbgenerated("()")) @db2.VarChar(255)
  sku_name     String    @default(dbgenerated("()")) @db2.VarChar(105)
  cost_mes     Float?
  currency     String?   @db2.VarChar(20)
  usage_mes    Float?
  time_started DateTime  @default(dbgenerated("(0000-00-00 00:00:00)")) @db2.DateTime(0)
  time_ended   DateTime? @db2.DateTime(0)

  @@id([tenant_id, time_started, sku_name])
}

model IdentityUsers {
  id                                 BigInt    @id @default(autoincrement())
  is_mfa_activated                   Boolean?
  lifecycle_state                    String?   @db2.VarChar(50)
  time_created                       DateTime? @db2.DateTime(0)
  last_successful_login_time         DateTime? @db2.DateTime(0)
  email                              String?   @db2.VarChar(255)
  email_verified                     String?   @db2.VarChar(10)
  can_use_api_keys                   Boolean?
  can_use_auth_tokens                Boolean?
  can_use_console_password           Boolean?
  can_use_customer_secret_keys       Boolean?
  can_use_db_credentials             Boolean?
  can_use_o_auth2_client_credentials Boolean?
  can_use_smtp_credentials           Boolean?
  identity_provider_id               String?   @db2.VarChar(255)
  tenancy_name                       String?   @db2.VarChar(255)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model MemoryUtilization {
  profile_name        String?   @db2.VarChar(30)
  tenancy_name        String?   @db2.VarChar(100)
  tenancy_id          String?   @db2.VarChar(200)
  compartment_id      String?   @db2.VarChar(150)
  resourceId          String?   @db2.VarChar(150)
  region              String?   @db2.VarChar(50)
  resourceDisplayName String?   @db2.VarChar(50)
  metric_timestamp    DateTime? @db2.DateTime(0)
  memory_usage        Float?

  @@ignore
}

model VolumesBackup {
  id                BigInt    @id @default(autoincrement())
  tenancyName       String?   @db2.VarChar(100)
  displayName       String?   @db2.VarChar(255)
  sizeInGbs         Int?
  vpusPerGb         Int?
  volumeId          String?   @db2.VarChar(255)
  backupId          String?   @unique(map: "backupId") @db2.VarChar(255)
  backupDisplayName String?   @db2.VarChar(255)
  timeCreated       DateTime? @db2.DateTime(0)
  backupType        String?   @db2.VarChar(50)
  totalDias         Int?
  uniqueSizeInGbs   Int?
  custoBackupDia    Decimal?  @db2.Decimal(10, 2)
  custoBackupMes    Decimal?  @db2.Decimal(10, 2)
  custoBackupHora   Decimal?  @db2.Decimal(10, 2)
}
